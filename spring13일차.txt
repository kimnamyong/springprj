스프링 13일차

//스프링관련용어

DI(의존성주입)
Object Mapper(ORM)
AOP
영속성컨텍스트
엔티티(Entity)와 DTO
서비스와 트랜잭션과 롤백
컨트롤러와 서비스와 리파지토리
맵퍼와 리파지토리
mybatis와 JPA
jsp/mustache/thymeleaf
ViewResolver
디스패쳐
Data Source
RestController와 Controller
ResponseBody/RequestBody
RequestParamer
PathVariable
인터셉터와 세션
연관관계의 주인 mapped by
영속성컨텍스트->dirty 체킹
@Transactional
Optional
spring security
------------------------
48번게시판
spring security
-------------------------

3.2.5
///////// 프로젝트
게시판-mustach
블로그-jsp
쇼핑몰-thymleaf
게시판-thymleaf
/////////

spring security 인증처리과정
이미지검색

추상화

인증, 인가

고전적인 로그인방식
session

HttpSession session

Authentication -인증
Authorities 권한
   admin/user

SecurityContextHolder
UserDetailsService
UserDetails
------------------------
SecurityConfig.java

보안

jwt인증, outh2인증
csrf.disable()

Spring 6
Spring boot 3

3.2.5

UserDetails 

SimpleGrantedAuthority

UserDetailsService 

/mail
이메일인증
비밀번호찾기
임시비번보내기
주소검색
/////////////////////////////
bbs1.sql
49번게시판 로그인과회원가입
50번 사용자 목록관리
51번 사용자 수정 삭제
---------------------------
admin
test123

// 기존의 로그인방식
/login
폼->아이디/비번 입력
로그인 버튼클릭

/loginprocess
controller->service->repository로 
아이디에 해당하는 user를
가져와서 
폼에 비번과 db에 비번을 비교

맞으면-> session에 아이디를 저장
session.setAttribute();

-> loginOK.html (로그인 화면)
-------------------------------------
//spring security

/login
폼->아이디/비번 입력
로그인 버튼클릭
-> /login_processing
-> 인터셉터가 아이디 비번을 가로챈다
UserDetailsService가 작동한다.
-> 아이디, 신분확인
-> 사용자를 UserDetails에서 권한부여
인증검사를 완료한후-> SecurityContextHolder
에 저장한다.

// 비번변경
비번은 PasswordEncoder로 암호화해서
저장한다.


52번게시판
JPA와 mysql 문제

자바 필드속성명 -> userName
데이터베이스 ->  user_name

53번게시판
transaction - SQL 문법
spring transaction - JPA
spring transacion - isolation level

프로세스
트랜잭션

수강신청 
30명이 한계
29명 동시에 2명이 신청
31명?

예약 -> 먹고-> 계산

참조 무결성 위반 


update -> save

service단에 
@transactional
update ->자동 save

영속성 컨텍스트에서 dirt checking

@Query(value="select *from user", nativeQuery=true)
find(String username)

JPQL
Querydsl

mybatis
jpa


Transaction Isolation Level

Phantom read
귀신


Dirty Reads 문제 
Non-repeatable Reads 문제 발생

의존성주입

필드주입
생성자주입
빈설정 






























